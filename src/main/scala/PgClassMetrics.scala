import com.github.mauricioaniche.ck.CKClassResult

case class PgClassMetrics(
                           repoName: String,
                           file: String,
                           className: String,
                           typeName: String,

                           cbo: Int,
                           cboModified: Int,
                           fanIn: Int,
                           fanOut: Int,
                           wmc: Int,
                           dit: Int,
                           noc: Int,
                           rfc: Int,
                           lcom: Int,
                           lcomStar: Double,
                           tcc: Double,
                           lcc: Double,

                           totalMethodsQty: Int,
                           staticMethodsQty: Int,
                           publicMethodsQty: Int,
                           privateMethodsQty: Int,
                           protectedMethodsQty: Int,
                           defaultMethodsQty: Int,
                           visibleMethodsQty: Int,
                           abstractMethodsQty: Int,
                           finalMethodsQty: Int,
                           synchronizedMethodsQty: Int,

                           totalFieldQty: Int,
                           staticFieldQty: Int,
                           publicFieldQty: Int,
                           privateFieldQty: Int,
                           protectedFieldQty: Int,
                           defaultFieldQty: Int,
                           finalFieldQty: Int,
                           synchronizedFieldQty: Int,

                           nosi: Int,
                           loc: Int,
                           returnQty: Int,
                           loopQty: Int,
                           comparisonQry: Int,
                           tryCatchQty: Int,
                           parenthesizedExpsQty: Int,
                           stringLiteralsQty: Int,
                           numbersQty: Int,
                           assignmentsQty: Int,
                           mathOperationsQty: Int,
                           variableQty: Int,
                           maxNestedBlocksQty: Int,
                           anonymousClassesQty: Int,
                           innerClassesQty: Int,
                           lambdasQty: Int,
                           uniqueWordsQty: Int,
                           modifiers: Int,
                           logStatementsQty: Int
                         )

object PgClassMetrics {
  def apply(repositoryName: String, metrics: CKClassResult) = new PgClassMetrics(
    repositoryName, metrics.getFile, metrics.getClassName, metrics.getType,
    metrics.getCbo, metrics.getCboModified,
    metrics.getFanin, metrics.getFanout,
    metrics.getWmc,
    metrics.getDit, metrics.getNoc, metrics.getRfc,
    metrics.getLcom, metrics.getLcomNormalized,
    metrics.getTightClassCohesion, metrics.getLooseClassCohesion,
    metrics.getNumberOfMethods, metrics.getNumberOfStaticMethods,
    metrics.getNumberOfPublicMethods, metrics.getNumberOfPrivateMethods,
    metrics.getNumberOfProtectedMethods, metrics.getNumberOfDefaultMethods,
    metrics.getVisibleMethods.size, metrics.getNumberOfAbstractMethods,
    metrics.getNumberOfFinalMethods, metrics.getNumberOfSynchronizedMethods,

    metrics.getNumberOfFields, metrics.getNumberOfStaticFields,
    metrics.getNumberOfPublicFields, metrics.getNumberOfPrivateFields,
    metrics.getNumberOfProtectedFields, metrics.getNumberOfDefaultFields,
    metrics.getNumberOfFinalFields, metrics.getNumberOfSynchronizedFields,

    metrics.getNosi,
    metrics.getLoc,
    metrics.getReturnQty,
    metrics.getLoopQty,
    metrics.getComparisonsQty,
    metrics.getTryCatchQty,
    metrics.getParenthesizedExpsQty,
    metrics.getStringLiteralsQty,
    metrics.getNumbersQty,
    metrics.getAssignmentsQty,
    metrics.getMathOperationsQty,
    metrics.getVariablesQty,
    metrics.getMaxNestedBlocks,
    metrics.getAnonymousClassesQty,
    metrics.getInnerClassesQty,
    metrics.getLambdasQty,
    metrics.getUniqueWordsQty,
    metrics.getModifiers,
    metrics.getNumberOfLogStatements
  )
}